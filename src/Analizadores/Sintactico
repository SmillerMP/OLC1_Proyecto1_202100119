
package Analizadores; 
import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import Clases.Errores;
import java.util.HashMap;
import proyecto1_compiladores1_2024.Funciones;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public static int indent = 0;
    public static String traduccion = "";
    public static Object[] objetosTemp = new Object[10];

    public static HashMap<Object, Object> variablesDeclaradas = new HashMap<>(); 
    public static HashMap<Object, Object> datosGraficas = new HashMap<>();
    public static ArrayList<Object> listaDatosTemp = new ArrayList<>();

    // Guarda el error Sintactico
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) + " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        //System.out.println("------------------------ Fin de Errores ----------------------------"); 
        listaErrores.add(new Errores("Sintáctico", "Error de sintaxis detectado. Se detectó: " + s.value, s.left + "", s.right + ""));
        //proyecto1_compi1.GUI.jTextArea2.setText("Error Sintáctico en la Línea " + (s.left) + " Columna "+s.right+ ". No se esperaba este componente: " +s.value+".");

    } 


    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    // Reporta error sintactico inrecuperable
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 

    }  
    

    public List<String> salidas = new ArrayList<String>();

    //Lista de errores
    public ArrayList<Errores> listaErrores = new ArrayList();

    public ArrayList<Errores> getErrores(){
        return listaErrores;
    }
:} 

// Expresiones regulares
terminal String ID;
terminal String DOUBLE;
terminal String STRING;
terminal String COM_SIMPLE;
terminal String COM_MULTI;


// Simbolos
terminal String PAR_IZQ;
terminal String PAR_DER;
terminal String COR_IZQ ;
terminal String COR_DER;
terminal String ARROBA;
terminal String IGUAL;
terminal String MENOS;
terminal String MAYOR_QUE;
terminal String MENOR_QUE;
terminal String PTCOMA;
terminal String COMA;
terminal String DOSPUNTOS;



// Reservadas
terminal String PR_PROGRAM;
terminal String PR_END;
terminal String PR_VAR;
terminal String PR_DOUBLE;
terminal String PR_CHAR;
terminal String PR_ARR;
terminal String PR_SUM;
terminal String PR_RES;
terminal String PR_MUL;
terminal String PR_DIV;
terminal String PR_MOD;
terminal String PR_MEDIA;
terminal String PR_MEDIANA;
terminal String PR_MODA;
terminal String PR_VARIANZA;
terminal String PR_MAX;
terminal String PR_MIN;
terminal String PR_CONSOLE;
terminal String PR_PRINT;
terminal String PR_COLUMN;
terminal String PR_EXEC;
terminal String PR_GRAPHPIE;
terminal String PR_GRAPHBAR;
terminal String PR_GRAPHLINE;
terminal String PR_HISTOGRAM;
terminal String PR_TITULO;
terminal String PR_EJEX;
terminal String PR_EJEY;
terminal String PR_TITULOX;
terminal String PR_TITULOY;
terminal String PR_VALUES;
terminal String PR_LABEL;

// No terminales
non terminal ini;
non terminal codigo;
non terminal instruccion;
non terminal instrucciones;
non terminal tiposVariables;
non terminal valores;
non terminal valoresArreglo;
non terminal operaciones;
non terminal valoresOperaciones;
non terminal funcionesEstadisticas;
non terminal GraficaLineas;
non terminal GraficaBarras;
non terminal GraficaPie;
non terminal GraficaHistograma;
non terminal comentarios;
non terminal intruccionGrafica;
non terminal instruccionesGraficas;

precedence left MENOS;

start with ini; 

ini::= codigo;

codigo::=
    codigo comentarios
    | codigo PR_PROGRAM instrucciones PR_END PR_PROGRAM 
    | PR_PROGRAM instrucciones PR_END PR_PROGRAM
    | comentarios
;

instrucciones::=
    instruccion instrucciones
    | instruccion
    | error instrucciones
;

instruccion::= 
    PR_VAR DOSPUNTOS tiposVariables DOSPUNTOS DOSPUNTOS ID:clave MENOR_QUE MENOS valores:valor PR_END PTCOMA   {:variablesDeclaradas.put(clave, valor);:}
    | PR_ARR DOSPUNTOS tiposVariables DOSPUNTOS DOSPUNTOS ARROBA ID:clave MENOR_QUE MENOS COR_IZQ valoresArreglo COR_DER PR_END PTCOMA {:variablesDeclaradas.put(clave, Funciones.copiaLista());:}
    | PR_CONSOLE DOSPUNTOS DOSPUNTOS PR_PRINT IGUAL valoresArreglo PR_END PTCOMA  {:Funciones.ImprimirConsola();:} 
    | PR_CONSOLE DOSPUNTOS DOSPUNTOS PR_COLUMN IGUAL valores:nombre MENOS MAYOR_QUE COR_IZQ valoresArreglo COR_DER PR_END PTCOMA   {:Funciones.ImprimirColumna(nombre);:} 
    | PR_CONSOLE DOSPUNTOS DOSPUNTOS PR_COLUMN IGUAL valores:nombre MENOS MAYOR_QUE ARROBA ID:val PR_END PTCOMA   {:Funciones.ImprimirColumnaArreglo(Funciones.busquedaLista(val), nombre);:} 
    | GraficaLineas
    | GraficaBarras
    | GraficaPie
    | GraficaHistograma
    | comentarios
;   

valores::=
    MENOS DOUBLE:val                    {: RESULT="-"+val; //System.out.println(val);:}
    | DOUBLE:val                        {: RESULT=val; //System.out.println(val);:}
    | ID:val                            {: RESULT=variablesDeclaradas.get(val); //System.out.println(val);:}
    | STRING:val                        {: RESULT=val; //System.out.println(val);:}
    | operaciones:val                   {: RESULT=val; //System.out.println(val);:}
    | funcionesEstadisticas:val         {: RESULT=val; //System.out.println(val);:}
;

tiposVariables::=
    PR_CHAR COR_IZQ COR_DER
    | PR_DOUBLE
;

valoresArreglo::=
    valoresArreglo COMA funcionesEstadisticas:val       {:listaDatosTemp.add(val);:}
    |valoresArreglo:rec COMA operaciones:val            {:listaDatosTemp.add(val);:}
    | valoresArreglo:rec COMA MENOS DOUBLE:val          {:listaDatosTemp.add("-"+val);:} 
    | valoresArreglo:rec COMA DOUBLE:val                {:listaDatosTemp.add(val);:} 
    | valoresArreglo:rec COMA STRING:val                {:listaDatosTemp.add(val); //System.out.println(val.toString());:} 
    | valoresArreglo:rec COMA ID:val                    {:listaDatosTemp.add(variablesDeclaradas.get(val));:} 
    | STRING:val                                        {:listaDatosTemp.add(val); //System.out.println(val);:} 
    | MENOS DOUBLE:val                                  {:listaDatosTemp.add("-"+val);:} 
    | DOUBLE:val                                        {:listaDatosTemp.add(val);:} 
    | ID:val                                            {:listaDatosTemp.add(variablesDeclaradas.get(val));:}      
    | operaciones:val                                   {:listaDatosTemp.add(val);:} 
    | ARROBA ID:val                                     {:listaDatosTemp.add(variablesDeclaradas.get(val));:}                      
    | funcionesEstadisticas:val                         {:listaDatosTemp.add(val);:}
;


operaciones::=
    | PR_SUM PAR_IZQ valoresOperaciones:val1 COMA valoresOperaciones:val2 PAR_DER       {:RESULT=Funciones.operaciones(val1, val2, "SUM");:}    
    | PR_RES PAR_IZQ valoresOperaciones:val1 COMA valoresOperaciones:val2 PAR_DER       {:RESULT=Funciones.operaciones(val1, val2, "RES");:}    
    | PR_MUL PAR_IZQ valoresOperaciones:val1 COMA valoresOperaciones:val2 PAR_DER       {:RESULT=Funciones.operaciones(val1, val2, "MUL");:}    
    | PR_DIV PAR_IZQ valoresOperaciones:val1 COMA valoresOperaciones:val2 PAR_DER       {:RESULT=Funciones.operaciones(val1, val2, "DIV");:}    
    | PR_MOD PAR_IZQ valoresOperaciones:val1 COMA valoresOperaciones:val2 PAR_DER       {:RESULT=Funciones.operaciones(val1, val2, "MOD");:}    
;

valoresOperaciones::=
    operaciones:val                 {:RESULT=val;:} 
    | funcionesEstadisticas:val     {:RESULT=val;:}
    | MENOS DOUBLE:val              {:RESULT="-"+val;:}
    | DOUBLE:val                    {:RESULT=val;:} 
    | ID:val                        {:RESULT=variablesDeclaradas.get(val); //System.out.println(variablesDeclaradas.get(val));:}      
;


funcionesEstadisticas::=
    PR_MEDIA PAR_IZQ COR_IZQ valoresArreglo COR_DER PAR_DER             {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "MEDIA");:}
    | PR_MEDIANA PAR_IZQ COR_IZQ valoresArreglo COR_DER PAR_DER         {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "MEDIANA");:}
    | PR_MODA PAR_IZQ COR_IZQ  valoresArreglo COR_DER PAR_DER           {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "MODA");:}    
    | PR_VARIANZA PAR_IZQ COR_IZQ valoresArreglo COR_DER PAR_DER        {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "VARIANZA");:} 
    | PR_MAX PAR_IZQ COR_IZQ valoresArreglo COR_DER PAR_DER             {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "MAX");:}
    | PR_MIN PAR_IZQ COR_IZQ valoresArreglo COR_DER PAR_DER             {:RESULT=Funciones.estadisticas(Funciones.copiaLista(), "MIN");:}
    | PR_MEDIA PAR_IZQ ARROBA ID:val PAR_DER                            {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "MEDIA");:}
    | PR_MEDIANA PAR_IZQ ARROBA ID:val  PAR_DER                         {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "MEDIANA");:}
    | PR_MODA PAR_IZQ ARROBA ID:val PAR_DER                             {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "MODA");:}
    | PR_VARIANZA PAR_IZQ ARROBA ID:val  PAR_DER                        {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "VARIANZA");:}
    | PR_MAX PAR_IZQ ARROBA ID:val  PAR_DER                             {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "MAX");:}
    | PR_MIN PAR_IZQ ARROBA ID:val  PAR_DER                             {:RESULT=Funciones.estadisticas(Funciones.busquedaLista(val), "MIN");:}
;

GraficaLineas::=
    PR_GRAPHLINE PAR_IZQ
    instruccionesGraficas
    PR_EXEC PR_GRAPHLINE PR_END PTCOMA
    PAR_DER PR_END PTCOMA 
;


GraficaBarras::=
    PR_GRAPHBAR PAR_IZQ
    instruccionesGraficas
    PR_EXEC PR_GRAPHBAR PR_END PTCOMA
    PAR_DER PR_END PTCOMA 
;

GraficaPie::=
    PR_GRAPHPIE PAR_IZQ
    instruccionesGraficas
    PR_EXEC PR_GRAPHPIE PR_END PTCOMA
    PAR_DER PR_END PTCOMA 
;


GraficaHistograma::=
    PR_HISTOGRAM PAR_IZQ
    instruccionesGraficas
    PR_EXEC PR_HISTOGRAM PR_END PTCOMA
    PAR_DER PR_END PTCOMA 
;

// Instrucciones para las graficas  
intruccionGrafica::=
    PR_TITULO DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL STRING:val PR_END PTCOMA                                {:datosGraficas.put("titulo", val);:}
    | PR_TITULO DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL ID:val PR_END PTCOMA                                  {:datosGraficas.put("titulo", variablesDeclaradas.get(val));:}
    | PR_EJEX DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL COR_IZQ valoresArreglo COR_DER PR_END PTCOMA            {:datosGraficas.put("ejeX", Funciones.copiaLista());:}
    | PR_EJEX DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL ARROBA ID:val PR_END PTCOMA                             {:datosGraficas.put("ejeX", variablesDeclaradas.get(val));:}
    | PR_EJEY DOSPUNTOS DOSPUNTOS PR_DOUBLE IGUAL COR_IZQ valoresArreglo COR_DER PR_END PTCOMA                          {:datosGraficas.put("ejeY", Funciones.copiaLista());:}
    | PR_EJEY DOSPUNTOS DOSPUNTOS PR_DOUBLE IGUAL ARROBA ID:val PR_END PTCOMA                                           {:datosGraficas.put("ejeY", variablesDeclaradas.get(val));:}
    | PR_TITULOX DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL STRING:val PR_END PTCOMA                             {:datosGraficas.put("tituloX", val);:}                                
    | PR_TITULOX DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL ID:val PR_END PTCOMA                                 {:datosGraficas.put("tituloX", variablesDeclaradas.get(val));:} 
    | PR_TITULOY DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL STRING:val PR_END PTCOMA                             {:datosGraficas.put("tituloY", val);:} 
    | PR_TITULOY DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL ID:val PR_END PTCOMA                                 {:datosGraficas.put("tituloY", variablesDeclaradas.get(val));:}            
    | PR_LABEL DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL COR_IZQ valoresArreglo COR_DER PR_END PTCOMA           {:datosGraficas.put("label", Funciones.copiaLista());:}
    | PR_VALUES DOSPUNTOS DOSPUNTOS PR_DOUBLE IGUAL COR_IZQ valoresArreglo COR_DER PR_END PTCOMA                        {:datosGraficas.put("values", Funciones.copiaLista());:}
    | PR_VALUES DOSPUNTOS DOSPUNTOS PR_CHAR COR_IZQ COR_DER IGUAL COR_IZQ valoresArreglo COR_DER PR_END PTCOMA          {:datosGraficas.put("values", Funciones.copiaLista());:}     
    | PR_VALUES DOSPUNTOS DOSPUNTOS PR_DOUBLE IGUAL ARROBA ID:val PR_END PTCOMA                                         {:datosGraficas.put("values", variablesDeclaradas.get(val));:}                                
    | comentarios

;

instruccionesGraficas::=
    intruccionGrafica instruccionesGraficas
    | intruccionGrafica
;

comentarios::=
    COM_SIMPLE 
    | COM_MULTI
;

